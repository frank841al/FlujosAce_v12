/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		
		CALL armarAuditoriaEventoEntrada (OutputRoot, 
									 OutputRoot.MQMD.CorrelId,
									 OutputRoot.MQRFH2.usr,
									 InputRoot.XMLNSC);   

										 		 		
			--Registrar Tipo 1 en auditoria
			IF SUBSTRING(OutputRoot.MQRFH2.usr.Parametros.LEVEL_AUDIT FROM 1 FOR 1) = '1' THEN
				SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = 'QL.GEN.AUDIT.REQ.01';--getCOLA_ENTRADA_FLUJO_EVENTS_SRV();--getCOLA_ENTRADA_FLUJO_AUDIT_SRV();
				SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueManagername = 'TMDW5';--REPLY_TO_QMGR;
				PROPAGATE TO LABEL 'LBL_AUDIT' DELETE NONE;
			END IF;
--			--Registrar Evento 1
			IF COALESCE(OutputRoot.MQRFH2.usr.Parametros.EVENTS,'') <> '' THEN
				IF OutputRoot.MQRFH2.usr.Parametros.EVENTS = getSI() THEN
				SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = 'QL.GEN.EVENTS.HUB.REQ.01';--getCOLA_ENTRADA_FLUJO_EVENTS_SRV();
				SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueManagername = 'TMDW5';--REPLY_TO_QMGR;
				PROPAGATE TO LABEL 'LBL_EVENT' DELETE NONE;
				END IF;
			END IF;
		--Eliminacion de data de auditoria
		DELETE FIELD OutputRoot.XMLNSC;     
		--Se recupera el mensaje original
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;     
		PROPAGATE TO TERMINAL 0 DELETE NONE; 
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
