/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL CopyEntireMessage();
		
		SET Environment.Backup.TramaJson = InputRoot;
		SET Environment.Backup.TramaJson.LocalEnvironment = InputLocalEnvironment;
		
		--Validacion de campos
		--CALL getValidationField (Environment.Backup, InputRoot.JSON.Data.integrationRequest.requestHeader);
		
		--Se elimina la cabecera del http
		DELETE FIELD OutputRoot.HTTPInputHeader;
		
		DECLARE nameOperation CHARACTER InputRoot.JSON.Data.integrationRequest.requestHeader.idOperacion;
		
		--1. Carga de parametria del servicio
		ROUTING : BEGIN ATOMIC  
		  IF COALESCE(cacheServices.{"inService_ccatsval"}.iniciado,FALSE) <> TRUE THEN
				CALL loadCacheParameter(cacheServices,inService_ccatsval, nameOperation, Environment);
		  END IF;
		END ROUTING;
		
		--Carga de cache  
		SET Environment.Service.MQRFH2.usr	= cacheServices.{"inService_ccatsval"}.Header.usr;
		SET Environment.Service.validate	= cacheServices.{"inService_ccatsval"}.validate;
				
		--Validacion si hubo error de cache  
		IF Environment.Service.validate.errorCode <> 0 THEN  
			THROW USER EXCEPTION MESSAGE Environment.Service.validate.errorCode VALUES(Environment.Service.validate.errorMsg);
		END IF;
		
		--2. Se genera la cabeceras para el mensaje
		SET OutputRoot.Properties = InputRoot.Properties;
		
		CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQMD';
		CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN 'MQRFH2';
		CREATE FIELD OutputRoot.MQRFH2.usr;
		CREATE FIELD OutputRoot.MQRFH2.usr.Parametros;
		
		DECLARE refOutUsr REFERENCE TO OutputRoot.MQRFH2.usr;
		DECLARE refUsrEnv REFERENCE TO Environment.Service.MQRFH2.usr;
		
		--Carga cache en cabecera MQRFH2 usr
		--CALL loadCacheHeader(refOutUsr , refUsrEnv, inServiceWP_RIW3, getNAME_SERVICE_WP_RIW3());
		
   		DECLARE inEnconding INTEGER CAST(COALESCE(refOutUsr.Parametros.ENCODING, 546) AS INTEGER);
		DECLARE inCCSID 	INTEGER CAST(COALESCE(refOutUsr.Parametros.CCSID, 1208) AS INTEGER);
		DECLARE msgId 		BLOB getMsgId(REPLY_TO_QMGR);
		
		--Seteo de Propiedades en Properties y MQMD
		CALL setOutputHeaderProperties(OutputRoot, getEMPTY_CHARACTER(), inEnconding, inCCSID, FALSE);
		CALL setOutputHeaderMQMD(OutputRoot, msgId, msgId, inEnconding, inCCSID);
		
		--Seteo de valores Protocolo y Servicio
		CALL setOutputHeaderRFH2(refOutUsr,
								 getID_PROTOCOLO_ENTRADA_HTTP(), --Cambiar por ID Protocolo que corresponda 
								 getPROTOCOLO_ENTRADA_HTTP(), --Cambiar por Protocolo que corresponda
								 msgId,
								 inEnconding,
								 inCCSID,
								 InputLocalEnvironment.Destination.HTTP.RequestIdentifier,
								 IP,
								 NULL);
		
		
--		
	PROPAGATE TO TERMINAL 0 DELETE NONE;
		
		RETURN FALSE;
	

		
	
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
