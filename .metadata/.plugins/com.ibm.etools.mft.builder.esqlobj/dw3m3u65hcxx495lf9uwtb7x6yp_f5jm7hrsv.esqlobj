/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		
		CALL CopyEntireMessage();
		
		SET refOutputRoot.Properties.MessageSet 	= getEMPTY_CHARACTER();
		SET refOutputRoot.Properties.MessageType 	= getEMPTY_CHARACTER();
		SET refOutputRoot.Properties.MessageFormat 	= getEMPTY_CHARACTER();
		   
		DECLARE refRfh2 REFERENCE TO Environment.Backup.MQRFH2.usr;
		DECLARE refParamOperation REFERENCE TO refRfh2.ParametrosOperacion;
		
--		CALL setOutputConfigProperties(OutputRoot, getEMPTY_CHARACTER(), getEMPTY_CHARACTER(), getEMPTY_CHARACTER(), getRP_MQ(), getEMPTY_CHARACTER());
		
		SET OutputRoot.MQMD.MsgId		= InputRoot.MQMD.MsgId;
	--	SET OutputRoot.MQMD.ReplyToQ	= refParamOperation.REPLY_TO_Q;
	--	SET OutputRoot.MQMD.ReplyToQMgr	= REPLY_TO_QMGR;
		
--		SET OutputLocalEnvironment.MQ.GET.QueueName 		 = refParamOperation.REPLY_TO_Q;
		SET OutputLocalEnvironment.MQ.GET.QueueName 		 = 'QLT.ECS2.RESP';
		SET OutputLocalEnvironment.MQ.GET.QueueManagerName 	 = 'TMDW5'; --REPLY_TO_QMGR;
--		SET OutputLocalEnvironment.MQ.GET.MQGMO.WaitInterval = CAST(refParamOperation.TIMEOUT_MQ AS INTEGER);
		SET OutputLocalEnvironment.MQ.GET.MQGMO.WaitInterval = CAST('60000' AS INTEGER);
		
		DELETE FIELD OutputRoot.MRM;
		
		PROPAGATE TO TERMINAL 0 DELETE NONE;
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
